# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  build_and_test:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04
    container: nomalab/ffmpeg:5.0.1 # image made from Dockerfile in directory

    continue-on-error: ${{ (matrix.rust == 'beta') || (matrix.rust == 'nightly') }}

    strategy:
      fail-fast: false
      matrix:
        rust: [
          1.73.0,
          1.74.0,
          1.75.0,
          1.76.0,
          1.77.0,
          1.78.0,
          1.79.0,
          1.80.0,
          1.81.0,
          1.82.0,
          stable,
          beta,
          nightly
        ]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          default: true

      - name: Run cargo test
        run: cargo test

  fmt:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust with rustfmt
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.82.0
          default: true
          components: rustfmt

      - name: Show version
        run: cargo fmt --version

      - name: Run cargo fmt
        run: cargo fmt -- --check

  clippy:
    runs-on: ubuntu-22.04
    container: nomalab/ffmpeg:5.0.1

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust with clippy
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.82.0
          default: true
          components: clippy

      - name: Run cargo clippy
        run: cargo clippy 2>&1 | tee ./clippy.out && ! grep -qe "error:\|warning:" ./clippy.out

  tarpaulin:
    runs-on: ubuntu-22.04
    container:
      image: nomalab/ffmpeg:5.0.1
      options: --security-opt seccomp=unconfined

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.82.0
          default: true

      - name: Install tarpaulin
        run: cargo install cargo-tarpaulin --force
        env:
          RUSTFLAGS: '--cfg procmacro2_semver_exempt'

      - name: Run cargo-tarpaulin
        run: cargo tarpaulin -v --ciserver travis-ci --coveralls $GITHUB_JOB

